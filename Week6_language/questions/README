AI technique used:
natural language processing: document retrieval and passage retrieval.

Background from website:
Question Answering (QA) is a field within natural language processing 
focused on designing systems that can answer questions. Among the more 
famous question answering systems is Watson, the IBM computer that 
competed (and won) on Jeopardy!. A question answering system of Watson’s 
accuracy requires enormous complexity and vast amounts of data, but in 
this problem, we’ll design a very simple question answering system based 
on inverse document frequency.

Our question answering system will perform two tasks: document retrieval 
and passage retrieval. Our system will have access to a corpus of text 
documents. When presented with a query (a question in English asked by 
the user), document retrieval will first identify which document(s) are 
most relevant to the query. Once the top documents are found, the top 
document(s) will be subdivided into passages (in this case, sentences) 
so that the most relevant passage to the question can be determined.

Work done:
In questions.py I implemented the functions: load_files, tokenize, 
compute_idfs, top_files, and top_sentences.

Run via:
python3 questions.py corpus/ (there are 10 .txt files)
(Run "pip3 install -r requirements.txt" to install the nltk package)
