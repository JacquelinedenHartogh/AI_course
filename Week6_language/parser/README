AI technique used:
natural language processing: parsing and noun phrases.

Background from website:
A common task in natural language processing is parsing, the process of determining the 
structure of a sentence. This is useful for a number of reasons: knowing the structure 
of a sentence can help a computer to better understand the meaning of the sentence, and 
it can also help the computer extract information out of a sentence. In particular, it’s 
often useful to extract noun phrases out of a sentence to get an understanding for what 
the sentence is about.

In this problem, we’ll use the context-free grammar formalism to parse English sentences 
to determine their structure. Recall that in a context-free grammar, we repeatedly apply 
rewriting rules to transform symbols into other symbols. The objective is to start with 
a nonterminal symbol S (representing a sentence) and repeatedly apply context-free grammar 
rules until we generate a complete sentence of terminal symbols (i.e., words). The rule 
S -> N V, for example, means that the S symbol can be rewritten as N V (a noun followed 
by a verb). If we also have the rule N -> "Holmes" and the rule V -> "sat", we can 
generate the complete sentence "Holmes sat.".

Work done:
In parser.py I implemented the functions: preprocess and np_chunk, and completed the 
context-free grammar rules defined in NONTERMINALS

Run via:
python3 parser.py sentences/4.txt (there are 10 .txt files)
(Run "pip3 install -r requirements.txt" to install the nltk package)
